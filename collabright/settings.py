"""
Django settings for collabright project.

Generated by 'django-admin startproject' using Django 3.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import environ
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Load OS environment variables and then prepare to use them
env = environ.Env()

# Loading .env file from root directory to set environment.
# OS Environment variables have precedence over variables defined
# in the .env file, that is to say variables from the .env files
# will only be used if not defined as environment variables.
base = environ.Path(__file__) - 2
environ.Env.read_env(env_file=base('.env'))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env.str('DJANGO_SECRET_KEY', default='django-insecure-b%qb#t_7%h7i7$6tg(ga&)(-l&^4z@a-jnss!q(&7ct^umm##)')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool('DEBUG', default=True)

ALLOWED_HOSTS = env('DJANGO_ALLOWED_HOSTS').split(',')
CORS_ALLOWED_ORIGINS = env('DJANGO_CORS_ALLOWED_ORIGINS').split(',')

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',
    'rest_framework.authtoken',
    'djoser',
    'django_celery_results',
    'collabright.base',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'collabright.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# Email Settings
# https://docs.djangoproject.com/en/3.2/topics/email/

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = env.str('EMAIL_SMTP_HOST', default='localhost')
EMAIL_USE_TLS = env.str('EMAIL_USE_TLS', default=False)
EMAIL_HOST_USER = env.str('EMAIL_SMTP_USER', default='')
EMAIL_HOST_PASSWORD = env.str('EMAIL_SMTP_PASSWORD', default='')
EMAIL_PORT = env.int('EMAIL_SMTP_PORT', default=1025)
DEFAULT_FROM_EMAIL = env.str('DEFAULT_FROM_EMAIL')


WSGI_APPLICATION = 'collabright.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

# Reads from DATABASE_URL
DATABASES = {
    'default': env.db()
}

REDIS_LOCATION = '{0}/{1}'.format(env.str('REDIS_URL', default='redis://127.0.0.1:6379'), 0)

# Caching Settings
# https://docs.djangoproject.com/en/3.2/topics/cache/

CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': REDIS_LOCATION,
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
            'IGNORE_EXCEPTIONS': True,  # mimics memcache behavior.
            # http://niwinz.github.io/django-redis/latest/#_memcached_exceptions_behavior
        }
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Celery Settings
# http://docs.celeryproject.org/en/latest/django/first-steps-with-django.html

CELERY_BROKER_URL = REDIS_LOCATION
CELERY_RESULT_BACKEND = 'django-db'
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = TIME_ZONE



# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

# TODO: CDN
STATIC_URL = env.str('CDN_URL', default='/static/')
STATIC_ROOT = os.path.join(os.path.join(BASE_DIR, 'staticfiles'), 'static')


DEFAULT_FILE_STORAGE=env.str('DEFAULT_FILE_STORAGE', default='django.core.files.storage.FileSystemStorage')
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'mediafiles')

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10,
    'DEFAULT_PERMISSION_CLASSES':
        ('rest_framework.permissions.DjangoModelPermissions',),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication'
    ),
}

DJOSER = {
    'PASSWORD_RESET_CONFIRM_URL': '#/password/reset/confirm/{uid}/{token}',
    'USERNAME_RESET_CONFIRM_URL': '#/username/reset/confirm/{uid}/{token}',
    'ACTIVATION_URL': 'activate?uid={uid}&token={token}',
    'SEND_ACTIVATION_EMAIL': True,
    'SEND_CONFIRMATION_EMAIL': True,
    'SERIALIZERS': {},
}

AUTH_USER_MODEL = 'base.User'

ARCGIS_APP_ID = env.str('ARCGIS_APP_ID')
ARCGIS_APP_SECRET = env.str('ARCGIS_APP_SECRET')
APP_URL = env.str('APP_URL')
DOCUSIGN_INTEGRATION_KEY = env.str('DOCUSIGN_INTEGRATION_KEY', default='')
DOCUSIGN_SECRET_KEY = env.str('DOCUSIGN_SECRET_KEY', default='')
DOCUSIGN_API_ACCOUNT_ID = env.str('DOCUSIGN_API_ACCOUNT_ID', default='')
DOCUSIGN_ACCOUNT_BASE_URI = env.str('DOCUSIGN_ACCOUNT_BASE_URI', default='')
